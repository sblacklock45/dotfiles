# Picom configuration
# Stevan Blacklock - May 2025

# Backend to use: "xrender" or "glx".
backend = "glx";
glx-no-stencil = true;
glx-copy-from-front = false;
use-damage = true

# Shadows
shadow = true;
shadow-radius = 5;
shadow-offset-x = 2;
shadow-offset-y = 2;
shadow-opacity = 0.50;

# Shadow excludes
shadow-exclude = [
    "name = 'Notification'",
    "name *= 'compton'",
    "name *= 'picom'",
    "class_g = 'firefox' && argb",
    "class_g = 'thunderbird' && argb",
        
# disables shadows on frames
    
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = true;

# Opacity
inactive-opacity = 0.9;
active-opacity = 0.95;
frame-opacity = 1;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of opaque windows with transparent frames as well
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [

    "window_type = 'desktop'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# Corners
corner-radius = 5

rounded-corners-exclude = [
    "window_type = 'dock'"
];

# Blur

blur:
{
method = "gaussian";
	size = 20; 
	deviation = 15;
};

blur-background-exclude = [
  "window_type = 'desktop'",
  "class_g = 'firefox'",
  "class_g = 'thunderbird'",
  "_GTK_FRAME_EXTENTS@:c"
];

# Fading
fading = true;

# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 5;

# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;

# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;

# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Vertical synchronization: match the refresh rate of the monitor
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = true;

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# Wintypes
wintypes : 
{
  tooltip : 
  {
    fade = true;
    shadow = false;
    opacity = 0.85;
    focus = true;
  };
  fullscreen : 
  {
    fade = true;
    shadow = false;
    opacity = 1;
    focus = true;
  };
};

# Animations
animations = (
  {
    	triggers = ["close"];
    	opacity = {
      	curve = "cubic-bezier(0,0,1,-0.28)";
      	duration = .2; 
      	start = "window-raw-opacity-before";
      	end = 0;
  };
    
	blur-opacity = "opacity";
    	shadow-opacity = "opacity";
    	offset-x = "(1 - scale-x) / 2 * window-width";
    	offset-y = "(1 - scale-y) / 2 * window-height";
    	scale-x = {
      		curve = "cubic-bezier(0,0,1,-0.28)";
      		duration = .2;
      		start = 1;
      		end = .5;
    	};
    	
	scale-y = "scale-x";
    	shadow-scale-x = "scale-x";
    	shadow-scale-y = "scale-y";
    	shadow-offset-x = "offset-x";
    	shadow-offset-y = "offset-y";
  },

  {
    	triggers = ["open"];
    	opacity = {
      		curve = "cubic-bezier(0,1.28,1,1)";
      		duration = .2;
      		start = 0;
      		end = "window-raw-opacity";
    	}
    
	blur-opacity = "opacity";
    	shadow-opacity = "opacity";
    	offset-x = "(1 - scale-x) / 2 * window-width";
    	offset-y = "(1 - scale-y) / 2 * window-height";
    	scale-x = {
      	curve = "cubic-bezier(0,1.28,1,1)";
      	duration = .2;
      	start = .5;
      	end = 1;
    };
    
	scale-y = "scale-x";
    	shadow-scale-x = "scale-x";
    	shadow-scale-y = "scale-y";
    	shadow-offset-x = "offset-x";
    	shadow-offset-y = "offset-y";
  },
  
  {
    	triggers = ["geometry"]
    	scale-x = {
      	curve = "cubic-bezier(0,1.28,1,1)";
      	duration = 0.22;
      	start = "window-width-before / window-width";
      	end = 1;
    }
    
    scale-y = {
      	curve = "cubic-bezier(0,1.28,1,1)";
      	duration = 0.22;
      	start = "window-height-before / window-height";
      	end = 1;
    }
    
    offset-x = {
      	curve = "cubic-bezier(0,1.28,1,1)";
      	duration = 0.22;
      	start = "window-x-before - window-x";
      	end = 0;
    }

    offset-y = {
      	curve = "cubic-bezier(0,1.28,1,1)";
      	duration = 0.22;
      	start = "window-y-before - window-y";
      	end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;

# Opacity rules
opacity-rule = [ 
"100:class_g = 'firefox'",
"100:class_g = 'thunderbird'",
"100:class_g = 'Gimp'",
"100:class_g = 'Vmware'",
"100:class_g = 'Fuse'",
"100:class_g = 'X64sc'",
"0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'", 
"96:_NET_WM_STATE@:32a *= '_NET_WM_STATE_STICKY'" 
];